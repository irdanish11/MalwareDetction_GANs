# -*- coding: utf-8 -*-
"""
Created on Sat Sep  5 01:36:35 2020

@author: Danish
"""


from DataPrepration import Get_Data
from SvmClassifier import SVMClassifier, load_model
from scipy.sparse import vstack
import numpy as np


pathX = 'drebin-features/drebin-parrot-v2-down-features-X.json'
pathY = 'drebin-features/drebin-parrot-v2-down-features-Y.json'

X, Y = Get_Data(pathX, pathY, test_size=0.25)

svm_path='./SVM/checkpoints/'
svm_name='SVM.obj'

################## Train Model ##################
svm = SVMClassifier(C=1.0, path=svm_path, name=svm_name, svc_linear=True, weight=None)
classifier = svm.fit_svm_classifier(X, Y)


################## Evaluate Model ##################
labels= {0:'Benignware', 1:'Malware'}
ckpt_path = svm_path+svm_name
svm = load_model(ckpt_path)

#Loaing Test Data
malware_train_test = Get_Data(pathX, pathY)
benignware_train_test = Get_Data(pathX, pathY)

#Aranging test Data
X_test = vstack([benignware_train_test[1],malware_train_test[1]])
Y_test = np.concatenate((benignware_train_test[3],malware_train_test[3]))
print('Shape of X_test: '+str(X_test.shape))
print('Shape of Y_test: '+str(Y_test.shape))

path = svm_path.split('/')[1]+'/SVM_ConfusionMatrix.png'
acc = svm.visualize_evaluation(X_test, Y_test, labels, path=path, normalize='all')



