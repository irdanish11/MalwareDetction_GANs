# -*- coding: utf-8 -*-
"""
Created on Mon Aug 31 18:04:45 2020

@author: Danish
"""

import json
from tqdm import tqdm
import numpy as np



def ReadJSON(path):
    with open(path, 'r') as f:
        obj = json.load(f)
    return obj

def feature_extractor(dic, unique_dic):
    feature = np.zeros((1, len(unique_dic)-1))        
    for k in list(dic.keys()): 
        if k=='sha256':
            sha256=dic[k]
        else:
            fe_name = k.split(':')[0]
            idx = unique_dic[fe_name]
            val = dic[k]
            feature[0][idx] += val
    return feature, sha256

def unique_features(X):    
    f_len = []
    unique = []    
    for i in tqdm(X):
        f_len.append(len(i))
        for f in list(i.keys()):
            if f.split(':')[0] not in unique:
                unique.append(f.split(':')[0])
    return unique, f_len

def prepare_features(X, unique):
    #Preparing unique dictionary
    unique_dic = {}
    for i in range(len(unique)):
        unique_dic[unique[i]] = i
        
    X_features = np.zeros((1,len(unique)-1))
    sha256_list = []
    for f in tqdm(X):
        feature, sha256 = feature_extractor(f, unique_dic)
        X_features = np.append(X_features, feature, axis=0)
        sha256_list.append(sha256)
    return X_features, sha256_list

pathX = 'drebin-features/drebin-parrot-v2-down-features-X.json'
pathY = 'drebin-features/drebin-parrot-v2-down-features-Y.json'
#Read Data
X = ReadJSON(pathX)
Y = ReadJSON(pathY)

unique, f_len = unique_features(X)

X_features, sha256_list = prepare_features(X, unique)

obj = X[0]

max(f_len)
min(f_len)
    
    

