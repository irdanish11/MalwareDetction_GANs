# -*- coding: utf-8 -*-
"""
Created on Tue Sep  1 16:46:18 2020

@author: Danish
"""


from data import Data
import numpy as np
import tensorflow as tf
from DataPrepration import Get_Data

pathX = 'drebin-features/drebin-parrot-v2-down-features-X.json'
pathY = 'drebin-features/drebin-parrot-v2-down-features-Y.json'

X, Y = Get_Data(pathX, pathY, feature_selection=True, n_features=15000, test_size=0.25)
    
X_malware, Y_malware = Get_Data(pathX, pathY)

X_goodware, Y_goodware = Get_Data(pathX, pathY)

malware_train_test = Get_Data(pathX, pathY)

goodware_train_test = Get_Data(pathX, pathY)

feature_names = Get_Data(pathX, pathY)





X_tf = convert_sparse_matrix_to_sparse_tensor(X)



import tensorflow as tf
from tensorflow.keras.layers import Dense, LeakyReLU, Dropout, BatchNormalization, Input
from tensorflow.keras.models import Model
from tensorflow.keras.optimizers import Adam

disc_input = Input((X.shape[1]))
        
d1 = Dense(256)(disc_input)
lr1 = LeakyReLU(0.2)(d1)


fc = Dense(1, activation='sigmoid')(lr1)

discriminator = Model(inputs=disc_input, outputs=d1, name='Model')
discriminator.summary()
discriminator.compile(loss='binary_crossentropy', optimizer=Adam(learning_rate=0.001))
discriminator.predict(X)
